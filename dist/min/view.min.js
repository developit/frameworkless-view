!function(a){"function"==typeof define&&define.amd?define(["util","events","handlebars"],a):a(window.util,window.EventEmitter,handlebars)}(function(a,b,c){function d(a,b,c,d){return a&&b&&c&&d?(a._eventRegistry||(a._eventRegistry=[]),a._eventTypes||(a._eventTypes={}),a._eventTypes.hasOwnProperty(b)||(a.addEventListener(b,e),a._eventTypes[b]=!0),a._eventRegistry.push({type:b,selector:c,callback:d}),!0):!1}function e(a){var b,c,d=this._eventRegistry,e=a.target||a.srcElement,f=[];for(c=d.length;c--;)d[c].type===a.type&&f.push(d[c]);do for(c=f.length;c--;)if(b=f[c],g.call(e,b.selector)&&b.callback.call(e,a)===!1)return!1;while((e=e.parentNode)!==this.parentNode)}function f(a,b){return this instanceof f?(this.rawView=a,this.renderTemplate=c.compile(this.rawView),this.base=document.createElement("div"),b&&this.base.setAttribute("id",b+"-base"),this.base.className="view-base",this.base.innerHTML=this.rawView,this.name=b,void(this.name&&this.base.setAttribute("data-view",b))):new f(a,b)}var g,h=b.EventEmitter||b,i=(window.Element||document.createElement("div").constructor).prototype;return g=i.matches||i.webkitMatchesSelector||i.mozMatchesSelector||i.oMatchesSelector||function(a){for(var b=document.querySelectorAll(a),c=b.length;c--;)if(b[c]===this)return!0;return!1},a.inherits(f,h),a.extend(f.prototype,{template:function(a){return this.renderTemplate?(this.templateData=a,this.base.innerHTML=a&&this.renderTemplate(a)||this.rawView,this):!1},hookEvents:function(a){var b,c,e,f;if(!this.base)return!1;this.events=a;for(f in a)if(a.hasOwnProperty(f)&&(b=f.split(" "),c=b[0],e=b.slice(1).join(" "),!d(this.base,c,e,a[f])))throw new Error('Invalid event entry "'+f+'".');return this},insertInto:function(a){if(!this.base)throw new Error("Cannot insert view prior to initialization");return"string"==typeof a&&(a=document.querySelector(a)),a.appendChild(this.base),this},insertAfter:function(a){return this.base&&("string"==typeof a&&(a=document.querySelector(a)),a.parentNode.insertBefore(this.base,a.nextSibling)),this},find:function(a){return Array.prototype.slice.call(this.base.querySelectorAll(a))},findOne:function(a){return this.base.querySelector(a)},$:function(a){return this.find(a)},$$:function(a){return this.findOne(a)}}),f.View=f.view=f,f});